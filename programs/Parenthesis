import java.util.Stack;

class Parenthesis {
    public static void main(String[] args) {
        String s1 = "()[]{}";
        String s2 = "({)}[]";

        if (isValid(s1)) System.out.println(s1 + " has Balanced Parentheses");
        else System.out.println(s1 + " doesn't have Balanced Parentheses");

        if (isValid(s2)) System.out.println(s2 + " has Balanced Parentheses");
        else System.out.println(s2 + " doesn't have Balanced Parentheses");
    }

    public static boolean isValid(String s) {
        Stack<Character> stack = new Stack<>();
        for (char ch : s.toCharArray()) {
            if (ch == '(' || ch == '{' || ch == '[') {
                stack.push(ch);
            } else {
                if (stack.isEmpty()) return false;

                char top = stack.pop();
                if ((ch == ')' && top != '(') ||
                    (ch == '}' && top != '{') ||
                    (ch == ']' && top != '[')) {
                    return false;
                }
            }
        }
        return stack.isEmpty(); // valid only if nothing is left
    }
}
