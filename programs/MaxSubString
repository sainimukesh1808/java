import java.util.ArrayList;
import java.util.List;

public class MaxSubString {
  public static int maxSubStringWithoutRepetition(String str) throws Exception {
    if (str == null || str.isEmpty()) {
            return "";
        }

        int maxLen = 1, currLen = 1;
        int maxStart = 0, currStart = 0;

        for (int i = 1; i < str.length(); i++) {
            if (str.charAt(i) != str.charAt(i - 1)) {
                currLen++;
            } else {
                currLen = 1;
                currStart = i;
            }

            if (currLen > maxLen) {
                maxLen = currLen;
                maxStart = currStart;
            }
        }

        //return str.substring(maxStart, maxStart + maxLen);
        return maxLen;
  }

  public static int maxSubstringWithRepetition(String str) throws Exception {
    if (str == null || str.isEmpty()) {
            return "";
        }

        int maxLen = 1, currLen = 1;
        int maxStart = 0, currStart = 0;

        for (int i = 1; i < str.length(); i++) {
            if (str.charAt(i) == str.charAt(i - 1)) {
                currLen++;
            } else {
                currLen = 1;
                currStart = i;
            }

            if (currLen > maxLen) {
                maxLen = currLen;
                maxStart = currStart;
            }
        }

        //return str.substring(maxStart, maxStart + maxLen);
        return maxLen;
  }

  public static void main(String[] a) throws Exception {
    //this is also sliding window approach.
    String str = "abcdeaa";
    System.out.println("Length of max sub array: " + maxSubStringWithoutRepetition(str));

    String repeatedCharString = "aaabbccababadddd";
    System.out.println("Length of max sub array: " + maxSubstringWithRepetition(repeatedCharString));
  }
}
